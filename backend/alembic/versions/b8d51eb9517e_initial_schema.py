"""Initial schema

Revision ID: b8d51eb9517e
Revises: 
Create Date: 2025-08-06 17:28:13.186955

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b8d51eb9517e'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('payment_details')
    op.drop_table('order_items')
    op.drop_table('saved_addresses')
    op.alter_column('comments', 'review_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('sellers', 'address')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('sellers', sa.Column('address', sa.VARCHAR(length=200), autoincrement=False, nullable=False))
    op.alter_column('comments', 'review_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_table('saved_addresses',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('buyer_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('address_line', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('state', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('zip_code', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['buyer_id'], ['buyers.id'], name=op.f('saved_addresses_buyer_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('saved_addresses_pkey'))
    )
    op.create_table('order_items',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name=op.f('order_items_order_id_fkey')),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('order_items_product_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('order_items_pkey'))
    )
    op.create_table('payment_details',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('payment_mode', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('payment_status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('paid_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('amount_paid', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name=op.f('payment_details_order_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('payment_details_pkey'))
    )
    # ### end Alembic commands ###
